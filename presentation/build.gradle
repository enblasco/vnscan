apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion = 24
    buildToolsVersion = '24.0.1'


    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        main.res.srcDirs =
                [
                    'src/main/res',
                    'src/main/res/layouts/fragment',
                    'src/main/res/layouts/activity',
                    'src/main/res/layouts/item',
                    'src/main/res/layouts/view'
                ]

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
        encoding = 'UTF-8'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
    }

}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith('test') || !sourceSet.name.startsWith('androidTest')) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationAndroidTestDependencies = rootProject.ext.presentationAndroidTestDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies


    compile project(':domain')
    compile project(':data')
    compile project(':vncore')

    compile presentationDependencies.appcomapt_v7
    compile presentationDependencies.kotlin
    compile presentationDependencies.dagger
    compile presentationDependencies.rxAndroid

    androidTestCompile presentationAndroidTestDependencies.espresso
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
        // Necessary to avoid version conflicts
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile presentationAndroidTestDependencies.runner
    androidTestCompile presentationAndroidTestDependencies.rules
    androidTestCompile presentationAndroidTestDependencies.espressoIntents
    androidTestCompile presentationAndroidTestDependencies.annotations
    androidTestCompile presentationAndroidTestDependencies.mockitoKotlin
    androidTestCompile presentationAndroidTestDependencies.kotlinReflect
    androidTestCompile presentationAndroidTestDependencies.daggerMock

    testCompile presentationTestDependencies.jUnit
    testCompile presentationTestDependencies.kotlin
    testCompile presentationTestDependencies.kotlinTest
    testCompile presentationTestDependencies.mockitoKotlin
    testCompile presentationTestDependencies.kluent


    provided presentationDependencies.javaxAnnotation
    kapt presentationDependencies.kaptDagger

    //Development//
    //compile developmentDependencies.leakCanary

    compile fileTree(dir: 'libs', include: '*.jar')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.50"


    implementation 'com.google.dagger:dagger-android:2.15'
    implementation 'com.google.dagger:dagger-android-support:2.11' // if you use the support libraries
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.11'
    implementation "com.google.dagger:dagger:2.15"
    implementation "com.google.dagger:dagger-android:2.15"
    implementation "com.google.dagger:dagger-android-support:2.15"
    kapt "com.google.dagger:dagger-compiler:2.15"
    kapt "com.google.dagger:dagger-android-processor:2.15"
    annotationProcessor "com.google.dagger:dagger-compiler:2.15"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'javax.inject:javax.inject:1'
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.google.com' }

}

kapt {
    generateStubs = true
}

